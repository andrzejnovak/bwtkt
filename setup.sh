#!/usr/bin/env bash
# BWTKT Setup Script
# Creates user-specific configuration and integration

set -e

BWTKT_DIR="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
USER_CONFIG_DIR="$HOME/.config/bwtkt"
USER_INIT_SCRIPT="$USER_CONFIG_DIR/bwtkt-user-init.sh"

echo "=== BWTKT (Bitwarden Toolkit) Setup ==="
echo

# Create user config directory
echo "Creating user configuration directory..."
mkdir -p "$USER_CONFIG_DIR"

# Check for existing user configuration
if [[ -f "$USER_INIT_SCRIPT" ]]; then
    echo "‚úÖ Existing BWTKT configuration found."
    
    # Extract current BW_USER from existing config
    current_user=$(grep "^export BW_USER=" "$USER_INIT_SCRIPT" 2>/dev/null | sed "s/export BW_USER='\(.*\)'/\1/")
    
    if [[ -n "$current_user" ]]; then
        echo "üìß Current Bitwarden user: $current_user"
        echo
        read -p "Do you want to change the Bitwarden user? (y/N): " -r change_user
        if [[ $change_user =~ ^[Yy]$ ]]; then
            echo "Please enter your new Bitwarden username/email:"
            read -r bw_user
            while [[ -z "$bw_user" ]]; do
                echo "Bitwarden username cannot be empty. Please enter your username/email:"
                read -r bw_user
            done
        else
            bw_user="$current_user"
        fi
    else
        echo "‚ö†Ô∏è  Configuration exists but no Bitwarden user found."
        echo "Please enter your Bitwarden username/email:"
        read -r bw_user
        while [[ -z "$bw_user" ]]; do
            echo "Bitwarden username cannot be empty. Please enter your username/email:"
            read -r bw_user
        done
    fi
else
    echo "Setting up new BWTKT configuration..."
    echo
    echo "Please enter your Bitwarden username/email:"
    read -r bw_user
    while [[ -z "$bw_user" ]]; do
        echo "Bitwarden username cannot be empty. Please enter your username/email:"
        read -r bw_user
    done
fi

# Check SSH configuration
echo
if [[ -f "$HOME/.bwssh" ]]; then
    echo "‚úÖ Existing SSH auto-login configuration found."
    
    # Count configured hosts (non-comment, non-empty lines)
    host_count=$(grep -v '^#' "$HOME/.bwssh" | grep -v '^$' | wc -l)
    
    if [[ $host_count -gt 0 ]]; then
        echo "üìã Currently configured SSH hosts ($host_count):"
        echo
        grep -v '^#' "$HOME/.bwssh" | grep -v '^$' | while IFS=',' read -r hostname object_id; do
            echo "   üîó $hostname ‚Üí $object_id"
        done
        echo
    else
        echo "‚ö†Ô∏è  Configuration file exists but no hosts are configured."
    fi
    
    read -p "Would you like to edit your SSH configuration? (Y/n): " -r edit_ssh_config
    if [[ ! $edit_ssh_config =~ ^[Nn]$ ]]; then
        editor="${EDITOR:-vi}"
        echo "Opening SSH configuration in $editor..."
        echo "Format: hostname,bitwarden-object-id"
        echo
        $editor "$HOME/.bwssh"
    fi
else
    echo "SSH auto-login configuration not found."
    read -p "Would you like to create a sample ~/.bwssh configuration? (Y/n): " -r create_ssh_config
    if [[ ! $create_ssh_config =~ ^[Nn]$ ]]; then
        cat > "$HOME/.bwssh" << 'EOF'
# SSH Auto-login Configuration
# Format: hostname,bitwarden-object-id
#
# Examples:
# myserver.example.com,12345678-1234-1234-1234-123456789abc
# 192.168.1.100,87654321-4321-4321-4321-abcdef123456
#
# To find your Bitwarden object IDs, run: bw list items
#
# Add your SSH hosts below:

EOF
        echo "Created sample ~/.bwssh configuration file."
        
        editor="${EDITOR:-vi}"
        read -p "Would you like to edit it now? (Y/n): " -r edit_now
        if [[ ! $edit_now =~ ^[Nn]$ ]]; then
            echo "Opening configuration in $editor..."
            echo "Format: hostname,bitwarden-object-id"
            echo
            $editor "$HOME/.bwssh"
        fi
    fi
fi

# Generate user-specific init script
echo
echo "Generating user configuration..."
cat > "$USER_INIT_SCRIPT" << EOF
#!/usr/bin/env bash
# BWTKT User Configuration
# Generated by setup.sh on $(date)
# 
# This file contains your personal BWTKT configuration.
# Source this from your ~/.bashrc to enable BWTKT functionality.

# User-specific configuration
export BW_USER='$bw_user'

# BWTKT installation directory
export BWTKT_DIR='$BWTKT_DIR'
export BWTKT_VERSION='0.2.0'

# Source the main BWTKT functions
if [[ -f "\$BWTKT_DIR/bwtkt-functions.sh" ]]; then
    source "\$BWTKT_DIR/bwtkt-functions.sh"
else
    echo "Error: BWTKT functions not found at \$BWTKT_DIR/bwtkt-functions.sh"
    echo "Please check your BWTKT installation."
fi
EOF

chmod +x "$USER_INIT_SCRIPT"

# Check if already integrated with bashrc
bashrc_line="source \"$USER_INIT_SCRIPT\""
if grep -qF "$bashrc_line" "$HOME/.bashrc" 2>/dev/null; then
    echo "‚úÖ Already integrated with ~/.bashrc"
else
    echo
    read -p "Add BWTKT to your ~/.bashrc? (Y/n): " -r add_to_bashrc
    if [[ ! $add_to_bashrc =~ ^[Nn]$ ]]; then
        echo "" >> "$HOME/.bashrc"
        echo "# BWTKT (Bitwarden Toolkit) Integration" >> "$HOME/.bashrc"
        echo "$bashrc_line" >> "$HOME/.bashrc"
        echo "‚úÖ Added BWTKT integration to ~/.bashrc"
        echo "   Lines added:"
        echo "   # BWTKT (Bitwarden Toolkit) Integration"
        echo "   $bashrc_line"
    else
        echo "‚ö†Ô∏è  Skipped ~/.bashrc integration."
        echo "   To enable BWTKT manually, add this to your ~/.bashrc:"
        echo "   $bashrc_line"
    fi
fi

echo
echo "=== Setup Complete! ==="
echo
echo "Configuration saved to: $USER_INIT_SCRIPT"
echo "Bitwarden user: $bw_user"

# Show SSH configuration status
if [[ -f "$HOME/.bwssh" ]]; then
    host_count=$(grep -v '^#' "$HOME/.bwssh" | grep -v '^$' | wc -l)
    if [[ $host_count -gt 0 ]]; then
        echo "SSH hosts configured: $host_count"
    else
        echo "SSH configuration: File exists but no hosts configured"
    fi
else
    echo "SSH configuration: Not configured"
fi

echo
echo "Next steps:"
if [[ $(grep -v '^#' "$HOME/.bwssh" | grep -v '^$' | wc -l) -eq 0 ]]; then
    echo "1. Edit ~/.bwssh with your SSH hosts and Bitwarden object IDs"
    echo "2. Restart your shell or run: source ~/.bashrc"
    echo "3. Run: bw --regenerate-session-key"
    echo "4. Test with: ssh user@hostname"
else
    echo "1. Restart your shell or run: source ~/.bashrc"
    echo "2. Run: bw --regenerate-session-key"
    echo "3. Test with: ssh user@hostname"
fi
echo
echo "New features after setup:"
echo "‚Ä¢ Enhanced 'bw' command with automatic session management"
echo "   ‚Ä¢ A priviledged (sudo-only accessible) file /var/root/.bitwarden.session is used to store the session key."
echo "‚Ä¢ SSH auto-login: ssh user@hostname (uses Bitwarden credentials if configured)"
echo "‚Ä¢ SCP auto-login: scp file user@hostname:/path (uses Bitwarden credentials if configured)"
echo
